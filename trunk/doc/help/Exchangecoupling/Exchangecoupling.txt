<literal>
<style type="text/css">
pre, tt, code { font-size:12px; }
pre.error { color:red; }
pre.codeinput  { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }
pre.codeoutput { padding:10px; border:1px solid #d3d3d3; background:#FFFFFF; }
pre.language-matlab { padding:5px; border:0px solid #d3d3d3; background:#FFFFFF; }
span.keyword { color:#0000FF }
span.comment { color:#228B22 }
span.string { color:#A020F0 }
span.untermstring { color:#B20000 }
span.syscmd { color:#B28C00 }
</style>
</literal>

<div class="content"><h1>Exchange coupling</h1><!--introduction--><p>Exchange couplings define magnetic interactions on selected bonds.</p><!--/introduction--><h2>Contents</h2><div><ul><li><a href="#1">Definition</a></li><li><a href="#2">Symmetry transformations</a></li></ul></div><h2>Definition<a name="1"></a></h2><p>Exchange coupling values similarly to single ion anisotropy matrix and g-tensor are represented as a matrix with dimensions of 3x3. Thes value of matrices are defined in [[SwpropertiesEN#4][sw.matrix]].mat. These matrices can be assigned to arbitrary pair of interacting spins, these assignments are stored in [[SwpropertiesEN#6][sw.coupling]].</p><h2>Symmetry transformations<a name="2"></a></h2><p>If the exchange interactions are assigned to bonds using symmetry operators (the sw.symmetry property is true) the exchange matrices are transformed as tensors between symmetry equivalent bonds. The list of symmetry equivalent bonds can be acquired using the sw.couplingtable command. For example the shortest equivalent bonds (first neigbors) can be listed using sw.couplingtable(1).table command:</p><pre class="codeinput">sq = sw;
sq.genlattice(<span class="string">'lat_const'</span>,[4 4 5],<span class="string">'sym'</span>,<span class="string">'P 4'</span>)
sq.addatom(<span class="string">'r'</span>,[0 0 0],<span class="string">'S'</span>,1)
sq.gencoupling
sq.couplingtable(1).table
</pre><pre class="codeoutput">
ans =

           1           0
           0           1
           0           0
           1           1
           1           1
           1           1
           0           0
           0           0
           0           0

</pre><p>The above example defines a square lattice of spin-1 magnetic atoms with fourfold symmetry in the <b>ab</b>-plane. The output of sw.couplingtable gives a matrix where each column defines individual couplings. The first three rows define the translation between the two interacting spins in lattice units. So the first [[BondEN][bond]] has a translation of (a,0,0) between the interacting spins. After assigning a matrix to this [[BondEN][bond]], the matrix of the second equivalent [[BondEN][bond]] is generated using the (t,R) symmetry operator ( t - translation, R - rotation). The R rotation (90 degree roation around the <b>c</b>-axis) is applied to the J interactions matrix:</p><pre class="codeinput">sq.addmatrix(<span class="string">'label'</span>,<span class="string">'J'</span>,<span class="string">'value'</span>,[0 0 1;0 0 0;-1 0 0])
sq.addcoupling(<span class="string">'J'</span>,1)
J = sq.couplingtable(1).matrix
</pre><pre class="codeoutput">
J(:,:,1) =

     0     0     1
     0     0     0
    -1     0     0


J(:,:,2) =

         0   -0.0000    0.0000
    0.0000         0    1.0000
   -0.0000   -1.0000         0

</pre><p>In the above example a Dzyaloshinskii-Moriya interaction is defeind. The coupling matrix on the second equivalent [[BondEN][bond]] J(:,:,2) is rotated by 90 degree by the following operation: <latex>J'=R\cdot J\cdot R^T</latex>. This can be also seen on the plot.</p><pre class="codeinput">plot(sq,<span class="string">'aCoupling'</span>,false)
</pre><img vspace="5" hspace="5" src="%ATTACHURLPATH%/gen_Exchangecoupling_01.png" alt=""> <p class="footer"><br><a href="http://www.mathworks.com/products/matlab/">Published with MATLAB&reg; R2014b</a><br></p></div>

<literal>
<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
ga('create', 'UA-30000935-3', 'psi.ch');
ga('send', 'pageview');
</script>
</literal>
